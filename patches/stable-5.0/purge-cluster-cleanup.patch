--- a/infrastructure-playbooks/purge-cluster.yml
+++ b/infrastructure-playbooks/purge-cluster.yml
@@ -878,6 +878,4 @@
     when: fetch_directory is not defined
 
   - name: purge fetch directory for localhost
-    file:
-      path: "{{ fetch_directory | default('fetch/') }}"
-      state: absent
+    shell: "/bin/rm -rf {{ fetch_directory }}/*"
--- a/infrastructure-playbooks/purge-container-cluster.yml
+++ b/infrastructure-playbooks/purge-container-cluster.yml
@@ -501,171 +501,6 @@
         path: /var/lib/ceph/crash
         state: absent
 
-- name: check container hosts
-
-  hosts:
-    - "{{ mon_group_name|default('mons') }}"
-    - "{{ osd_group_name|default('osds') }}"
-    - "{{ mds_group_name|default('mdss') }}"
-    - "{{ rgw_group_name|default('rgws') }}"
-    - "{{ rbdmirror_group_name|default('rbdmirrors') }}"
-    - "{{ nfs_group_name|default('nfss') }}"
-    - "{{ mgr_group_name|default('mgrs') }}"
-
-  gather_facts: true
-  become: true
-
-  tasks:
-
-  - import_role:
-      name: ceph-defaults
-
-  - import_role:
-      name: ceph-facts
-      tasks_from: container_binary
-
-  - name: remove stopped/exited containers
-    command: >
-      {{ container_binary }} container prune -f
-    changed_when: false
-
-  - name: show container list on all the nodes (should be empty)
-    command: >
-      {{ container_binary }} ps --filter='name=ceph' -a -q
-    register: containers_list
-    changed_when: false
-
-  - name: show container images on all the nodes (should be empty if tags was passed remove_img)
-    command: >
-      {{ container_binary }} images
-    register: images_list
-    changed_when: false
-
-  - name: fail if container are still present
-    fail:
-      msg: "It looks like container are still present."
-    when: containers_list.stdout_lines|length > 0
-
-
-- name: final cleanup
-
-  hosts:
-    - "{{ mon_group_name|default('mons') }}"
-    - "{{ osd_group_name|default('osds') }}"
-    - "{{ mds_group_name|default('mdss') }}"
-    - "{{ rgw_group_name|default('rgws') }}"
-    - "{{ rbdmirror_group_name|default('rbdmirrors') }}"
-    - "{{ nfs_group_name|default('nfss') }}"
-    - "{{ mgr_group_name|default('mgrs') }}"
-    - "{{ grafana_server_group_name|default('grafana-server') }}"
-
-  become: true
-
-  tags: with_pkg
-
-  tasks:
-    - import_role:
-        name: ceph-defaults
-
-    - name: check if it is Atomic host
-      stat: path=/run/ostree-booted
-      register: stat_ostree
-
-    - name: set fact for using Atomic host
-      set_fact:
-        is_atomic: "{{ stat_ostree.stat.exists }}"
-
-    - import_role:
-        name: ceph-facts
-        tasks_from: container_binary
-
-    - name: remove ceph container image
-      command: "{{ container_binary }} rmi {{ ceph_docker_registry }}/{{ ceph_docker_image }}:{{ ceph_docker_image_tag }}"
-      changed_when: false
-      tags:
-        - remove_img
-
-    - name: stop docker service
-      service:
-        name: docker
-        state: stopped
-        enabled: no
-      when:
-        - not is_atomic
-        - container_binary == 'docker'
-      ignore_errors: true
-
-    - name: remove docker on debian/ubuntu
-      apt:
-        name: ['docker-ce', 'docker-engine', 'docker.io', 'python-docker', 'python3-docker']
-        state: absent
-        update_cache: yes
-        autoremove: yes
-      when: ansible_facts['os_family'] == 'Debian'
-
-    - name: red hat based systems tasks
-      block:
-        - name: yum related tasks on red hat
-          block:
-            - name: remove packages on redhat
-              yum:
-                name: ['epel-release', 'docker', 'python-docker-py']
-                state: absent
-
-            - name: remove package dependencies on redhat
-              command: yum -y autoremove
-              args:
-                warn: no
-
-            - name: remove package dependencies on redhat again
-              command: yum -y autoremove
-              args:
-                warn: no
-          when:
-            ansible_facts['pkg_mgr'] == "yum"
-
-        - name: dnf related tasks on red hat
-          block:
-            - name: remove docker on redhat
-              dnf:
-                name: ['docker', 'python3-docker']
-                state: absent
-
-            - name: remove package dependencies on redhat
-              command: dnf -y autoremove
-              args:
-                warn: no
-
-            - name: remove package dependencies on redhat again
-              command: dnf -y autoremove
-              args:
-                warn: no
-          when:
-            ansible_facts['pkg_mgr'] == "dnf"
-      when:
-        ansible_facts['os_family'] == 'RedHat' and
-        not is_atomic
-
-    - name: find any service-cid file left
-      find:
-        paths: /run
-        patterns:
-          - "ceph-*.service-cid"
-          - "rbd-target-api.service-cid"
-          - "rbd-target-gw.service-cid"
-          - "tcmu-runner.service-cid"
-          - "node_exporter.service-cid"
-          - "prometheus.service-cid"
-          - "grafana-server.service-cid"
-          - "alertmanager.service-cid"
-      register: service_cid_files
-
-    - name: rm any service-cid file
-      file:
-        path: "{{ item.path }}"
-        state: absent
-      with_items: "{{ service_cid_files.files }}"
-
 
 - name: purge ceph directories
 
@@ -697,12 +532,6 @@
     shell: rm -rf /var/lib/ceph/*  # noqa 302
     changed_when: false
 
-  # (todo): remove this when we are able to manage docker
-  # service on atomic host.
-  - name: remove docker data
-    shell: rm -rf /var/lib/docker/*  # noqa 302
-    when: not is_atomic | bool
-
 - name: purge fetch directory
 
   hosts: localhost
@@ -717,6 +546,4 @@
     when: fetch_directory is not defined
 
   - name: purge fetch directory for localhost
-    file:
-      path: "{{ fetch_directory | default('fetch/') }}/"
-      state: absent
+    shell: "/bin/rm -rf {{ fetch_directory }}/*"
